import requests
import json
from config import keys

class APIExeption(Exception):
    pass


# –í—ã–±—Ä–∞–Ω–Ω—ã–π API –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º —Å–ª–æ–≤–∞—Ä–µ–º {–ø–∞—Ä–∞_–≤–∞–ª—é—Ç : –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å},
# –ø–æ—ç—Ç–æ–º—É —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —Å–ª–æ–≤–∞—Ä—è –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ –º—ã –ø–æ –∫–ª—é—á—É "–ø–∞—Ä–∞_–≤–∞–ª—é—Ç"
# –ø–æ–ª—É—á–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
class CurrencyConverter:
    @staticmethod
    def get_price(quote:str, base:str, amount:str):
        try:
            tr_quote = keys[quote]
            tr_base = keys[base]
        except KeyError:
            raise APIExeption("–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ –≤–∞–ª—é—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –æ–Ω–∞ –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞ –Ω–µ–∑–Ω–∞–∫–æ–º–∞ ü§®)")

        try:
            amount = float(amount)
        except ValueError:
            raise APIExeption("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã –∏–∑–º–µ—Ä—è–µ—Ç—Å—è —Ü–∏—Ñ–µ—Ä–∫–∞–º–∏! –í—ã –æ—à–∏–±–ª–∏—Å—å ‚òπ")

        if quote == base:
            raise APIExeption("–í–∞–ª—é—Ç—É –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–∞–º—É –≤ —Å–µ–±—è! –î–∞–≤–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑–º–µ–Ω–∏–º!")

        r = requests.get(f"https://currate.ru/api/?get=rates&pairs={tr_quote}{tr_base}&key=e1d8a7efd8f9664b7b91267a0b13d281")
        t = list(json.loads(r.content).values())[2]
        total_base = float(t[f"{tr_quote}{tr_base}"]) * amount
        return total_base